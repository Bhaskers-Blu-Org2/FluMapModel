ls
package_data = read.table("r_requirements.txt", header = FALSE, sep = "=")
setwd("/home/ccollins@internal.idm.ctr/development/seattle_flu/seattle_flu")"
package_data = read.table("r_requirements.txt", header = FALSE, sep = "=")
setwd("/home/ccollins@internal.idm.ctr/development/seattle_flu/seattle_flu")
package_data = read.table("r_requirements.txt", header = FALSE, sep = "=")
d = utils::installed.packages()
View(d)
d = utils::installed.packages(fields="Version")
View(d)
df = as.data.frame(as.table(utils::installed.packages()))
View(df)
View(df)
View(d)
matrix(package_data)
a = matrix(package_data)
View(a)
View(a)
a = matrix(package_data, byrow = TRUE)
View(a)
View(a)
a = matrix(package_data, byrow = TRUE)
View(a)
View(a)
d = utils::installed.packages(fields="Version")
m = utils::installed.packages(fields="Version")
m2 = data.frame( col = rep(colnames(m2), each = nrow(m), row = repr(rownames(m), ncol(m)), value= as.vector(m)))
m2 = data.frame( col = rep(colnames(m), each = nrow(m), row = repr(rownames(m), ncol(m)), value= as.vector(m)))
m2 = data.frame( col = rep(colnames(m), each = nrow(m), row = rep(rownames(m), ncol(m)), value= as.vector(m)))
View(m2)
View(m2)
m3 - data.table(d)
m3 - data.table(d)
d
d[,3]
a = d[,3]
View(package_data)
View(package_data)
View(package_data)
View(a)
a2 = data.table(a)
a2 = data.frame(a)
d = utils::installed.packages()[,3]
package_data = read.table("r_requirements.txt", header = FALSE, sep = "=")
View(package_data)
View(package_data)
View(d)
d[0]
d[0,]
d[,0]
d[,1]
package_data = read.table("r_requirements.txt", row.names = 1, header = FALSE, sep = "=")
View(package_data)
package_data$optparse
package_data$a
package_data$V2
package_data["optparse"]
package_data["optparse", ]
d[,1]
d
package_data
d
d["optparse", ]
d2 = data.frame(d)
View(d2)
View(d2)
d2["optparse"]
d2["optparse", ]
d2["optparse", 1]
d2["optparse", ]
d2[1, ]
d2$row_names
d2$row.names
d2
d2$d
d2 = data.frame(d, row.names = row.names(d))
row.names(d)
a row.names(d)
a = row.names(d)
typeof(d)
names(d)
d2 = data.frame(row.names=names(d), value=d)
View(d2)
View(d2)
d2["optparse",]
d2["optparse2",]
d2$value
package_data
package_data$V2
d$installed = d2$value[ d2$value %eq% d$V2]
d$v2
d$installed = d2$value[ d2$value %eq% package_data$V2]
d$installed = d2$value[ d2$value %in% package_data$V2]
d$installed = d2$value[ d2$value == package_data$V2]
merge(package_data, d, all.x = TRUE)
merge(package_data, d, by = intersect(names(x), names(y)), all.x = TRUE)
merge(package_data, d, by = intersect(names(package_data), names(d)), all.x = TRUE)
x = merge(package_data, d, by = intersect(names(package_data), names(d)), all.x = TRUE)
View(x)
View(d2)
View(d2)
x = merge(package_data, d, by.x = "V2", by.y="value", all.x = TRUE)
x = merge(package_data, d, by.x = "V2", by.y="value", all.x = TRUE)
d2
d2$value
x = merge(package_data, d, by.x = names(x), by.y=names(d), all.x = TRUE)
x = merge(package_data, d, by.x = names(package_data), by.y=names(d), all.x = TRUE)
names(package_data)
row.names(package_data)
x = merge(package_data, d, by.x = row.names(package_data), by.y=row.names(d), all.x = TRUE)
colnames(d2)[colnames(d2)=="value"] <- "V2"
View(d2)
View(d2)
merge(package_data, d2)
merge(package_data, d2, by="row.names", all.X=TRUE)
merge(package_data, d2, by="row.names", all.x=TRUE)
merge(package_data, d2, by="row.names", all.y=TRUE)
merge(package_data, d2, by="row.names", all.x =TRUE)
merge(package_data, d2, by="row.names", all.x =TRUE)
package_data = read.table("r_requirements.txt", row.names = 1, header = FALSE, sep = "=")
merge(package_data, d2, by="row.names", all.x =TRUE)
merge(package_data, d2, by="row.names", all.L =TRUE)
merge(package_data, d2, by="row.names", all.L =FALSE)
merge(package_data, d2, by="row.names")
diff(package_data, d2, by="row.names")
as.matrix(package_data)
diff(package_data, d2, by="row.names")
merge(package_data, d2, by="row.names")
merge(package_data, d2, by="row.names", all.L =TRUE)
merge(package_data, d2, by="row.names", all.Z =TRUE)
merge(package_data, d2, by="row.names", all.x  =TRUE)
d4 = merge(package_data, d2, by="row.names", all.Z =TRUE)
d4[is.na(d4$V2.y)]
d5 = d4[is.na(d4$V2.y)]
View(d5)
View(d5)
d4[is.na(d4$V2.y)]
d4 = merge(package_data, d2, by="row.names", all.Z =TRUE)
View(d4)
d5 = d4[is.na(d4$V2.y)]
View(d5)
View(d4)
d5 = d4[!is.na(d4$V2.y)]
d4 = merge(package_data, d2, by="row.names", all.Z =TRUE)
View(d4)
View(d4)
View(d2)
View(package_data)
View(d4)
d4 = merge(package_data, d2, by="row.names", all.x =TRUE)
d5 = d4[!is.na(d4$V2.y)]
View(d5)
View(d5)
d5 = d4[is.na(d4$V2.y)]
View(d4)
View(d5)
d5 = d4[is.na(d4$V2.y), ]
View(d5)
debugSource('~/development/seattle_flu/seattle_flu/setup_env.R')
debugSource('~/development/seattle_flu/seattle_flu/setup_env.R')
debugSource('~/development/seattle_flu/seattle_flu/setup_env.R')
debugSource('~/development/seattle_flu/seattle_flu/setup_env.R')
View(packagestoinstall)
source('~/development/seattle_flu/seattle_flu/setup_env.R')
#utils::install.packages( packagestoinstall,
#                     repos = "http://cran.csiro.au"
#)
} else {
if( length( packagestoinstall ) > 0L ) {
apply(packagestoinstall,  function(x) print(x))
debugSource('~/development/seattle_flu/seattle_flu/setup_env.R')
debugSource('~/development/seattle_flu/seattle_flu/setup_env.R')
debugSource('~/development/seattle_flu/seattle_flu/setup_env.R')
apply(packagestoinstall,  function(x) print(x) )
debugSource('~/development/seattle_flu/seattle_flu/setup_env.R')
if( length( packagestoinstall ) > 0L ) {
debugSource('~/development/seattle_flu/seattle_flu/setup_env.R')
if( length( packagestoinstall ) > 0L ) {
apply(packagestoinstall,  function(x) print(x) )
} else {
print( "All requested packages already installed" )
}
View(installed_packages)
debugSource('~/development/seattle_flu/seattle_flu/setup_env.R')
installed_packages = data.frame(d, row.names = row.names(d))
debugSource('~/development/seattle_flu/seattle_flu/setup_env.R')
pkgLoad(
package_data
)
source('~/development/seattle_flu/seattle_flu/setup_env.R')
source('~/development/seattle_flu/seattle_flu/setup_env.R')
apply(packagestoinstall,  1, function(x) print(row.names(x)) )
apply(packagestoinstall,  1, function(x) print(Row.names(x)) )
apply(packagestoinstall,  1, function(x) print(x) )
source('~/development/seattle_flu/seattle_flu/setup_env.R')
if( length( packagestoinstall ) > 0L ) {
apply(packagestoinstall,  1, function(x) print(x) )
} else {
print( "All requested packages already installed" )
}
source('~/development/seattle_flu/seattle_flu/setup_env.R')
apply(packagestoinstall,  1, function(x) print(x$Row.names) )
source('~/development/seattle_flu/seattle_flu/setup_env.R')
apply(packagestoinstall,  1, function(x) print(x) print(row.names(x)) )
source('~/development/seattle_flu/seattle_flu/setup_env.R')
source('~/development/seattle_flu/seattle_flu/setup_env.R')
apply(packagestoinstall,  1, function(x) print(x)) )
source('~/development/seattle_flu/seattle_flu/setup_env.R')
apply(packagestoinstall,  1, function(x) print(x))
source('~/development/seattle_flu/seattle_flu/setup_env.R')
source('~/development/seattle_flu/seattle_flu/setup_env.R')
source('~/development/seattle_flu/seattle_flu/setup_env.R')
source('~/development/seattle_flu/seattle_flu/setup_env.R')
source('~/development/seattle_flu/seattle_flu/setup_env.R')
source('~/development/seattle_flu/seattle_flu/setup_env.R')
source('~/development/seattle_flu/seattle_flu/setup_env.R')
install.packages("devtools")
require("devtools")
