swagger: "2.0"
info:
  description: "Seattle Flu Incidence Mapper API service. This includes a model store and a model querying API"
  version: "1.0.0"
  title: "Seattle Flu Incidence Mapper API"
  contact:
    email: "ccollins@idmod.org"
  license:
    name: "MIT"
    url: "https://raw.githubusercontent.com/seattleflu/incidence-mapper/master/LICENSE"
basePath: "/v1"
tags:
- name: "generic_model"
  description: "Stores our different models"
  externalDocs:
    description: "Github"
    url: "https://github.com/seattleflu/incidence-mapper"
- name: "query_model"
  description: "Queries our model"
  externalDocs:
    description: "Github"
    url: "https://github.com/seattleflu/incidence-mapper"
schemes:
- "https"
- "http"
paths:
  /query:
    post:
      tags:
      - "query_model"
      summary: "Query a model"
      description: "Query a model for a result set. This API supports output in both CSV and JSON format.

      The incoming query must container a model_type and observed field. Pathogen field is recommended. If not provided
      then we will use the value <b>['all']</b> as the default


      The format of the output varies based on the model and the requested content-type. Generally speaking, the output
      will be a collection of rows containing all the observed fields from the query. The result could also include
      additional fields that are not part of the query but are inherit properties our outputs of the model such a
      catchment, positive results, n, etc."
      operationId: "seattle_flu_incidence_mapper.query_model.query"
      produces:
        - "application/json"
        - "text/csv"
      parameters:
        - in: body
          name: query_json
          description: "Model Query. This will be resolved into a model id"
          required: true
          schema:
            type: object
            $ref: '#/definitions/QueryModel'
      responses:
        200:
          description: "successful operation. This will contain wll the observed fields of the models(included some
          fields not explicit part of the query depending on the model"
          schema:
            type: "array"
            items:
              type: "object"
        404:
          description: "Could not find a model matching the specified query"
          schema:
            type: "object"
            $ref: '#/definitions/ErrorResponse'
        500:
          description: "Model execution error"
          schema:
            type: "object"
            $ref: '#/definitions/ErrorResponse'

  /generic_models:
    get:
      tags:
      - "generic_model"
      summary: "List available models"
      description: "List available pathogen models"
      operationId: "seattle_flu_incidence_mapper.generic_models.read_all"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/PathogenModel"
    post:
      tags:
      - "generic_model"
      summary: "Add a new pathogen model to the model store"
      description: "This is the api we use to upload models. These make models created by researchers available through the api. To register a model it should include its model_type, name, and query"
      operationId: "seattle_flu_incidence_mapper.generic_models.create"
      consumes:
      - multipart/form-data
      produces:
      - "application/json"
      parameters:
      - in: formData
        name: "name"
        description: "Name of pathogen model"
        required: true
        type: string
      - in: formData
        name: "query_str"
        description: "Query of pathogen model"
        required: true
        type: string
      - in: formData
        name: "model_type"
        description: "Type of model"
        required: true
        type: string
      - in: formData
        name: model
        type: file
        description: "Model File."
        required: true
      responses:
        405:
          description: "Invalid input"
      security:
      - api_key: []
  /generic_models/{modelId}:
    get:
      tags:
      - "generic_model"
      summary: "Find pathogen model by ID"
      description: "Returns a single pathogen model"
      operationId: "seattle_flu_incidence_mapper.generic_models.read"
      produces:
      - "application/json"
      parameters:
      - name: "modelId"
        in: "path"
        description: "ID of Pathogen Model to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PathogenModel"
        400:
          description: "Invalid ID supplied"
        404:
          description: "PathogenModel not found"
    delete:
      tags:
      - "generic_model"
      summary: "Deletes a pathogen model"
      description: ""
      operationId: "seattle_flu_incidence_mapper.generic_models.delete"
      produces:
      - "application/json"
      parameters:
      - name: "api_key"
        in: "header"
        required: false
        type: "string"
      - name: "modelId"
        in: "path"
        description: "PathogenModel id to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "PathogenModel not found"
      security:
      - api_key: []
    put:
      tags:
      - "generic_model"
      summary: "Update an existing model"
      description: ""
      operationId: "seattle_flu_incidence_mapper.generic_models.update"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "api_key"
        in: "header"
        required: false
        type: "string"
      - name: "modelId"
        in: "path"
        description: "PathogenModel id to delete"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "PathogenModel object that needs to be updated in the store"
        required: true
        schema:
          $ref: "#/definitions/PathogenModel"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "PathogenModel not found"
        405:
          description: "Validation exception"
      security:
      - api_key: []
  /generic_models/{modelId}/model:
    get:
      tags:
      - "generic_model"
      summary: "Find pathogen model file by ID"
      description: "Returns a single pathogen model file"
      operationId: "seattle_flu_incidence_mapper.generic_models.model_file"
      produces:
      - "application/octet-stream"
      parameters:
      - name: "modelId"
        in: "path"
        description: "ID of Pathogen Model to return"
        required: true
        type: "string"
      - name: "latent"
        in: "query"
        description: "Return the latent verion of model file"
        required: false
        type: "boolean"
        default: false
      responses:
        200:
          description: "successful operation"
          schema:
            type: file
        400:
          description: "Invalid ID supplied"
        404:
          description: "PathogenModel not found"
securityDefinitions:
  api_key:
    type: "apiKey"
    name: "X-Auth"
    in: "header"
    x-apikeyInfoFunc: "seattle_flu_incidence_mapper.apikey_auth.apikey_auth"
definitions:
  PathogenModel:
    type: "object"
    required:
    - "name"
    - "query_str"
    properties:
      id:
        type: "string"
        example: "abcdef01234567890"
      name:
        type: "string"
        example: "flu1_latent_x"
      query_str:
        type: "string"
      model_type:
        type: "string"
      created:
        type: "string"
        format: "date-time"
  QueryModel:
    type: "object"
    required:
      - "model_type"
      - "observed"
    properties:
      model_type:
        type: "string"
        example: "inla_observed"
        description: "The model type. Currently we support inla and inla_latent models"
        enum: [inla_observed, inla_latent]
      observed:
        type: "array"
        description: "List of observed fields"
        items:
          type: "string"
        example:
          - residence_census_tract
          - site_type
          - flu_shot
          - sex
          - encountered_week
      pathogen:
        type: array
        items:
          type: "string"
        default:
          - "all"
      spatial_domain:
        type: string
        example: seattle_geojson_census_tract
  ErrorResponse:
    type: "object"
    required:
      - "error"
    properties:
      error:
        type: "string"
        example: "Could not find the specified id"
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"
externalDocs:
  description: "The Seattle Flu Study Model Output API"
  url: "https://github.com/seattleflu/incidence-mapper"
  
